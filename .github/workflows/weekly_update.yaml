name: Run Weekly Database Update Automation

on:
  schedule:
    - cron: "0 9 * * 5" # 9am (UTC) every Friday
  workflow_dispatch: {}

jobs:
  run-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v2
      - name: Setup minimum python version compatible with project
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Load cached pypoetry installation and virtualenvs
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: local-pypoetry
      - name: Install pypoetry
        uses: snok/install-poetry@v1.3.0
        with:
          version: 1.1.13
          virtualenvs-path: ~/.local/opt/virtualenvs
      - name: Install/update project dependencies
        run: poetry install --no-interaction
      - name: Attempt database update
        run: poetry run python pdh_json_updater/update_json.py
      - name: Check if database update occurred
        id: check-update
        run: echo "was-updated=$(git diff --quiet pauper_commander.json; echo $?)" >> $GITHUB_OUTPUT
      - name: Get current date
        id: get-date
        if: steps.check-update.outputs.was-updated == '1'
        run: echo "current-date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
      - name: Submit pull request for database updates
        if: steps.check-update.outputs.was-updated == '1'
        uses: peter-evans/create-pull-request@v3
        with:
          add-paths: pauper_commander.json, last_update_metadata.json
          branch: database-update/${{ steps.get-date.outputs.current-date }}
          commit-message: Database update ${{ steps.get-date.outputs.current-date }}
          title: Database update ${{ steps.get-date.outputs.current-date }}
          reviewers: oakreid, chevEldrid
      - name: Checkout PR branch
        if: steps.check-update.outputs.was-updated == '1'
        uses: actions/checkout@v2
        with:
          ref: database-update/${{ steps.get-date.outputs.current-date }}
      - name: Run unit tests
        if: steps.check-update.outputs.was-updated == '1'
        run: make test
